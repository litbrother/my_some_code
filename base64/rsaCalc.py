import gmpy2
p=0xf4c0644e26e642c6160942c9bb43d703ee6610b209300257a360a99cbe12ea4b2da1b5c5c62a885eb7412274dec71877041aff99a5b16093e107d5f60b24e5fbL
q=0xd7cda4a9e4a1fc98418d41f1cc21c0a153fadc090809d87869a95b8da6406c56a8028f93e453ff716adea69656ca3ca64cb92473eeeac1fbbc6db8c4b174cd51L
n=0xCE522FBBA31B08CEA95A54D9AC09BEC855CC927955FE1E6197EFFD693AA8F667F67C074B0390C66A0B8C11ABD11849CC570255FF8F982B236E34031711930AD4398D4E68FD279D4D0C7C7AC813BF5FF09AC58DDD35AA25F8D6BACD0B1A62261A81E7FB3F32D3C5C30802FA1EF78B5897CE65CDCD7EC6948FD86DC5ACD392C36B
e=0x010001
C=0xdc2eeeb2782c
d = gmpy2.invert(e,(p-1)*(q-1))
M = pow(C ,d ,n)    # M = pow(C ,d , n) = C ** d % n
print(M)
print(hex(M))